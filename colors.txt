std::cout << "Sensors,";
        std::cout << "\033[1;31m";
        std::cout << " ex1";
        std::cout << "\033[0m";
        std::cout << this->sensors->get_external_temperature_1();
        std::cout << "\033[1;31m";
        std::cout << " ex2";
        std::cout << "\033[0m";
        std::cout << this->sensors->get_external_temperature_2();
        std::cout << "\033[1;32m";
        std::cout << " up";
        std::cout << "\033[0m";
        std::cout << this->sensors->get_temperature_up();
        std::cout << "\033[1;32m";
        std::cout << " mup";
        std::cout << "\033[0m";
        std::cout << this->sensors->get_temperature_middle_up();
        std::cout << "\033[1;32m";
        std::cout << " mdn";
        std::cout << "\033[0m";
        std::cout << this->sensors->get_temperature_middle_down();
        std::cout << "\033[1;32m";
        std::cout << " dn";
        std::cout << "\033[0m";
        std::cout << this->sensors->get_temperature_down();
        std::cout << "\033[1;32m";
        std::cout << " tube";
        std::cout << "\033[0m";
        std::cout << this->sensors->get_tube_temperature();
        std::cout << "\033[1;33m";
        std::cout << " valv";
        std::cout << "\033[0m";
        std::cout << this->sensors->get_plunger_temperature();
        std::cout << "\033[1;34m";
        std::cout << " pos";
        std::cout << "\033[0m";
        std::cout << this->sensors->get_motor_position();
        std::cout << "\033[1;34m";
        std::cout << " speed";
        std::cout << "\033[0m";
        std::cout << this->sensors->get_motor_speed();
        std::cout << "\033[1;36m";
        std::cout << " m_pow";
        std::cout << "\033[0m";
        std::cout << this->driver->motor_pid_output;
        std::cout << "\033[1;36m";
        std::cout << " current";
        std::cout << "\033[0m";
        std::cout << this->sensors->get_motor_current();
        std::cout << "\033[1;36m";
        std::cout << " bh_pow";
        std::cout << "\033[0m";
        std::cout << this->driver->heater_pid_output;
        std::cout << "\033[1;35m" << " p_r" << "\033[0m";
        std::cout << this->sensors->get_pressure_rete();
        std::cout << "\033[1;35m" << " 0_r" << "\033[0m";
        std::cout << this->sensors->get_adc0_rate();
        std::cout << "\033[1;35m" << " 1_r" << "\033[0m";
        std::cout << this->sensors->get_adc1_rate();
        std::cout << "\033[1;35m" << " 2_r" << "\033[0m";
        std::cout << this->sensors->get_adc2_rate();
        std::cout << "\033[1;35m" << " 3_r" << "\033[0m";
        std::cout << this->sensors->get_adc3_rate();
        std::cout << "\n";